 -add test cases for functions, especially ones that update objects and deal with the main program logic
 -print messages for certain things like when there are no more questions to answer or when a question is added or edited successfully
 -maybe later maybe queue the questions, because right now the question with the most recent update date (that is ready for review) is answered, so don't want to starve the older questions in case the user is a little behind with answering questions
 -answer questions view->gives you options (by tags, by dates, etc.)
 -add view for answering a question and rating how well you know it
 -add tags when creating a question
 -allow users to answer questions that are almost ready (>=90% ready)
 -allow users to skip questions
 -when in show_question view, don't label question with its id because its number is irrelevant and some numbers will be skipped if they are deleted (e.g. 3 questions, ids might be 1,2,and 4)
 -finish reading the 7 step tutorial and integrating the way they do their views/urls into this app (since they initially show you a long way and then show you a very efficient way)
 -make question and answer text boxes bigger (maybe by changing the default django widgets for the type of model attribute to be a large text box instead)
